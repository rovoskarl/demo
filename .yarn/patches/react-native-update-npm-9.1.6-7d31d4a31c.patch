diff --git a/android/src/main/java/cn/reactnative/modules/update/DownloadTask.java b/android/src/main/java/cn/reactnative/modules/update/DownloadTask.java
index 543cb126764ccfc37fd09cec9527dad4492d1649..921e657473eca2966d7dc497cfd99248e79f6fcc 100644
--- a/android/src/main/java/cn/reactnative/modules/update/DownloadTask.java
+++ b/android/src/main/java/cn/reactnative/modules/update/DownloadTask.java
@@ -100,7 +100,7 @@ class DownloadTask extends AsyncTask<DownloadTaskParams, long[], Void> {
             if (UpdateContext.DEBUG) {
                 Log.d("RNUpdate", "Progress " + received + "/" + contentLength);
             }
-            
+
             int percentage = (int)(received * 100.0 / contentLength + 0.5);
             if (percentage > currentPercentage) {
                 currentPercentage = percentage;
diff --git a/android/src/main/java/cn/reactnative/modules/update/UpdateContext.java b/android/src/main/java/cn/reactnative/modules/update/UpdateContext.java
index 65a031fd4d94f2564c0a42a09613befe980336a9..6e513e57208fc4df192c47aa7da84ce1e50c6707 100644
--- a/android/src/main/java/cn/reactnative/modules/update/UpdateContext.java
+++ b/android/src/main/java/cn/reactnative/modules/update/UpdateContext.java
@@ -18,13 +18,14 @@ import java.util.concurrent.Executors;
 import java.io.File;
 
 public class UpdateContext {
-    private Context context;
     private File rootDir;
+    private static Context context;
     private Executor executor;
 
     public static boolean DEBUG = false;
     private static ReactInstanceManager mReactInstanceManager;
     private static boolean isUsingBundleUrl = false;
+    public static File appFilePath;
 
     public UpdateContext(Context context) {
         this.context = context;
@@ -49,6 +50,10 @@ public class UpdateContext {
         }
     }
 
+    public static Context getContext() {
+        return context;
+    }
+
     public String getRootDir() {
         return rootDir.toString();
     }
@@ -110,6 +115,7 @@ public class UpdateContext {
             params.targetFile = new File(rootDir, fileName);
 
         }
+        appFilePath = params.targetFile;
 //        params.unzipDirectory = new File(rootDir, hash);
         new DownloadTask(context).executeOnExecutor(this.executor, params);
     }
diff --git a/android/src/main/java/cn/reactnative/modules/update/UpdateModuleImpl.java b/android/src/main/java/cn/reactnative/modules/update/UpdateModuleImpl.java
index 9eafb48fe5d9f80c65fdb4997d158e359aed5b65..8d7ac9275ed0a30e8b00427948c766a97a042940 100644
--- a/android/src/main/java/cn/reactnative/modules/update/UpdateModuleImpl.java
+++ b/android/src/main/java/cn/reactnative/modules/update/UpdateModuleImpl.java
@@ -23,6 +23,9 @@ import java.util.Optional;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
+import cn.reactnative.modules.update.utils.FileUtils;
+import cn.reactnative.modules.update.utils.NotificationUtils;
+
 public class UpdateModuleImpl {
 
     public static final String NAME = "Pushy";
@@ -47,18 +50,25 @@ public class UpdateModuleImpl {
         String url = options.getString("url");
         String hash = options.getString("hash");
         String target = options.getString("target");
-        updateContext.downloadFile(url, hash, target, new UpdateContext.DownloadFileListener() {
-            @Override
-            public void onDownloadCompleted(DownloadTaskParams params) {
-               UpdateModule.installApk(params.targetFile);
-                promise.resolve(null);
-            }
+        File file = UpdateContext.appFilePath;
+        if (FileUtils.isFileExists(file)) {
+            new NotificationUtils().showDownloadCompleteNotification("下载完成", "点击安装", file);
+            UpdateModule.installApk(file);
+        } else {
+            updateContext.downloadFile(url, hash, target, new UpdateContext.DownloadFileListener() {
+                @Override
+                public void onDownloadCompleted(DownloadTaskParams params) {
+                    new NotificationUtils().showDownloadCompleteNotification("下载完成", "点击安装", params.targetFile);
+                    UpdateModule.installApk(params.targetFile);
+                    promise.resolve(null);
+                }
 
-            @Override
-            public void onDownloadFailed(Throwable error) {
-                promise.reject(error);
-            }
-        });
+                @Override
+                public void onDownloadFailed(Throwable error) {
+                    promise.reject(error);
+                }
+            });
+        }
     }
 
     public static void installApk(String url) {
diff --git a/android/src/main/java/cn/reactnative/modules/update/utils/FileUtils.java b/android/src/main/java/cn/reactnative/modules/update/utils/FileUtils.java
new file mode 100644
index 0000000000000000000000000000000000000000..587d70bc3d0d909add0d8c23fc340be9893c15f4
--- /dev/null
+++ b/android/src/main/java/cn/reactnative/modules/update/utils/FileUtils.java
@@ -0,0 +1,25 @@
+package cn.reactnative.modules.update.utils;
+
+import java.io.File;
+
+/**
+ * 文件工具操作类
+ *
+ * @author surile
+ * @since 2024/2/29
+ */
+
+public class FileUtils {
+    /**
+     * 判断文件是否存在
+     */
+    public static boolean isFileExists(final File file) {
+        if (file == null) {
+            return false;
+        }
+        if (file.exists()) {
+            return true;
+        }
+        return isFileExists(file.getAbsoluteFile());
+    }
+}
\ No newline at end of file
diff --git a/android/src/main/java/cn/reactnative/modules/update/utils/NotificationUtils.java b/android/src/main/java/cn/reactnative/modules/update/utils/NotificationUtils.java
new file mode 100644
index 0000000000000000000000000000000000000000..2645f58dbf99800cc8b01f6a6870f40cb35c8a88
--- /dev/null
+++ b/android/src/main/java/cn/reactnative/modules/update/utils/NotificationUtils.java
@@ -0,0 +1,93 @@
+package cn.reactnative.modules.update.utils;
+
+
+import android.app.Notification;
+import android.app.NotificationChannel;
+import android.app.NotificationManager;
+import android.app.PendingIntent;
+import android.content.Context;
+import android.content.Intent;
+import android.net.Uri;
+import android.os.Build;
+
+import androidx.core.app.NotificationCompat;
+
+import java.io.File;
+
+import cn.reactnative.modules.update.UpdateContext;
+
+import static androidx.core.content.FileProvider.getUriForFile;
+
+/**
+ * @author surile
+ * @since 2024/3/5 09:43
+ */
+public class NotificationUtils {
+    private NotificationManager notificationManager;
+
+    private final Context reactApplicationContext = UpdateContext.getContext();
+
+    private NotificationCompat.Builder builder;
+
+    private final int notificationId = 100001;
+
+    private Intent getUriFile(File toInstall) {
+        Uri apkUri;
+        Intent intent;
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {
+            apkUri = getUriForFile(reactApplicationContext, reactApplicationContext.getPackageName() +  ".pushy.fileprovider", toInstall);
+            intent = new Intent(Intent.ACTION_VIEW);
+            intent.setData(apkUri);
+            intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION | Intent.FLAG_GRANT_PERSISTABLE_URI_PERMISSION);
+        } else {
+            apkUri = Uri.fromFile(toInstall);
+            intent = new Intent(Intent.ACTION_VIEW);
+            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
+            intent.setDataAndType(apkUri, "application/vnd.android.package-archive");
+        }
+        return intent;
+    }
+
+    public void showDownloadCompleteNotification(final String title, final String description, final File file) {
+        // App后台运行
+        // 更新参数，注意flags要使用FLAG_UPDATE_CURRENT
+        Intent installAppIntent = getUriFile(file);
+
+        PendingIntent contentIntent = PendingIntent.getActivity(UpdateContext.getContext(), 0, installAppIntent, PendingIntent.FLAG_MUTABLE);
+
+        if (notificationManager == null) {
+            notificationManager = (NotificationManager) reactApplicationContext.getSystemService(Context.NOTIFICATION_SERVICE);
+        }
+
+        // 创建NotificationChannel（仅在Android O及以上版本需要）
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
+            NotificationChannel channel = new NotificationChannel(
+                    "download_complete",
+                    "下载完成通知",
+                    NotificationManager.IMPORTANCE_DEFAULT
+            );
+            notificationManager.createNotificationChannel(channel);
+        }
+
+        if (builder == null) {
+            builder = new NotificationCompat.Builder(reactApplicationContext, "download_complete")
+                    .setSmallIcon(android.R.drawable.stat_sys_download_done)
+                    .setContentTitle(title)
+                    .setContentText(description)
+                    .setContentIntent(contentIntent)
+                    .setPriority(NotificationCompat.PRIORITY_DEFAULT)
+                    .setAutoCancel(true) // 设置自动取消
+                    .setDefaults(Notification.DEFAULT_ALL);
+        } else {
+            builder.setContentIntent(contentIntent);
+            builder.setContentTitle(title);
+            builder.setContentText(description);
+        }
+
+        Notification notification = builder.build();
+
+        notification.flags = Notification.FLAG_AUTO_CANCEL;
+
+        notificationManager.notify(notificationId, notification);
+    }
+}
\ No newline at end of file
diff --git a/android/src/oldarch/cn/reactnative/modules/update/UpdateModule.java b/android/src/oldarch/cn/reactnative/modules/update/UpdateModule.java
index 094423d1b18894ea6cf34b3ce4c2bd9b48ca5077..185fbd0c57175aacd446e1a4a3b83fb062105fa5 100644
--- a/android/src/oldarch/cn/reactnative/modules/update/UpdateModule.java
+++ b/android/src/oldarch/cn/reactnative/modules/update/UpdateModule.java
@@ -25,6 +25,9 @@ import java.lang.reflect.Field;
 import java.util.HashMap;
 import java.util.Map;
 
+import cn.reactnative.modules.update.utils.FileUtils;
+import cn.reactnative.modules.update.utils.NotificationUtils;
+
 import static androidx.core.content.FileProvider.getUriForFile;
 
 public class UpdateModule extends ReactContextBaseJavaModule {
@@ -86,23 +89,42 @@ public class UpdateModule extends ReactContextBaseJavaModule {
         });
     }
 
+    @ReactMethod
+    public void isFileExists(Promise promise) {
+        boolean isExists = FileUtils.isFileExists(UpdateContext.appFilePath);
+        promise.resolve(isExists);
+    }
+
+    @ReactMethod
+    public void onInstallApp() {
+        installApk(UpdateContext.appFilePath);
+    }
+
     @ReactMethod
     public void downloadAndInstallApk(ReadableMap options, final Promise promise) {
         String url = options.getString("url");
         String hash = options.getString("hash");
         String target = options.getString("target");
-        updateContext.downloadFile(url, hash, target, new UpdateContext.DownloadFileListener() {
-            @Override
-            public void onDownloadCompleted(DownloadTaskParams params) {
-                installApk(params.targetFile);
-                promise.resolve(null);
-            }
+        File file = UpdateContext.appFilePath;
+        if (FileUtils.isFileExists(file)) {
+            new NotificationUtils().showDownloadCompleteNotification("下载完成", "点击安装", file);
+            UpdateModule.installApk(file);
+        } else {
+            updateContext.downloadFile(url, hash, target, new UpdateContext.DownloadFileListener() {
+                @Override
+                public void onDownloadCompleted(DownloadTaskParams params) {
+                    new NotificationUtils().showDownloadCompleteNotification("下载完成", "点击安装", params.targetFile);
+                    installApk(params.targetFile);
+                    promise.resolve(null);
+                }
+
+                @Override
+                public void onDownloadFailed(Throwable error) {
+                    promise.reject(error);
+                }
+            });
+        }
 
-            @Override
-            public void onDownloadFailed(Throwable error) {
-                promise.reject(error);
-            }
-        });
     }
 
     // install downloaded apk
@@ -134,7 +156,7 @@ public class UpdateModule extends ReactContextBaseJavaModule {
     private void downloadPatchFromPackage(ReadableMap options, final Promise promise) {
         String url = options.getString("updateUrl");
         String hash = options.getString("hash");
-        
+
         updateContext.downloadPatchFromApk(url, hash, new UpdateContext.DownloadFileListener() {
             @Override
             public void onDownloadCompleted(DownloadTaskParams params) {
@@ -147,14 +169,14 @@ public class UpdateModule extends ReactContextBaseJavaModule {
             }
         });
     }
-   
+
     @ReactMethod
     private void downloadPatchFromPpk(ReadableMap options, final Promise promise) {
         String url = options.getString("updateUrl");
         String hash = options.getString("hash");
-        
+
         String originHash = options.getString("originHash");
-        
+
         updateContext.downloadPatchFromPpk(url, hash, originHash, new UpdateContext.DownloadFileListener() {
             @Override
             public void onDownloadCompleted(DownloadTaskParams params) {
@@ -285,7 +307,7 @@ public class UpdateModule extends ReactContextBaseJavaModule {
     public void removeListeners(Integer count) {
     // Remove upstream listeners, stop unnecessary background tasks
     }
-    
+
     /* 发送事件*/
     public static void sendEvent(String eventName, WritableMap params) {
         ((ReactContext) mContext).getJSModule(DeviceEventManagerModule.RCTDeviceEventEmitter.class).emit(eventName,
diff --git a/lib/main.ts b/lib/main.ts
index b7fa3b746715213198c5ea079c8b4111ab4c6763..7905634179ced18e82093773d144f28b6c4c54ac 100644
--- a/lib/main.ts
+++ b/lib/main.ts
@@ -396,3 +396,15 @@ export async function downloadAndInstallApk({
   });
   progressHandler && progressHandler.remove();
 }
+
+export async function isFileExists() {
+  try {
+    return await PushyModule.isFileExists();
+  } catch (error) {
+    console.log(error);
+  }
+}
+
+export function onInstallApp() {
+  return PushyModule.onInstallApp();
+}
